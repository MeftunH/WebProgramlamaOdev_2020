
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Yeni Pokemon Oluştur</h1>
<div class="form-group pokemon-input-container">
    <input id="pokemon-name-input" class="form-control input" type="text" required placeholder="Pokemon İsmini Giriniz..." />
    <div class="row-container">
        <input id="pokemon-heigth-input" class="form-control input" type="number" required placeholder="Pokemonun Boyunu Giriniz...(M)" />
        <input id="pokmeon-weigth-input" class="form-control input" type="number" required placeholder="Pokemonun Kilosunu Giriniz...(KG)" />
    </div>
    <input id="pokemon-category-input" class="form-control input" type="text" required placeholder="Pokemon Kategorisini Giriniz..." />
    <input id="pokemon-price-input" class="form-control input" type="number" required placeholder="Pokemon Fiyatını Giriniz..." />
    <input id="pokemon-image-input" class="form-control input" type="url" required placeholder="Pokemon Resim URL'sini Giriniz..." />
    @await Component.InvokeAsync(typeof(WebProgramlamaOdev.ViewComponents.NewPokemon.Types))
    @await Component.InvokeAsync(typeof(WebProgramlamaOdev.ViewComponents.NewPokemon.Stats))
    @await Component.InvokeAsync(typeof(WebProgramlamaOdev.ViewComponents.NewPokemon.Abilities))
    @await Component.InvokeAsync(typeof(WebProgramlamaOdev.ViewComponents.NewPokemon.Weakness))
    <button id="btn-new-pokemon" class="form-control btn btn-lg btn-primary my-2">Oluştur</button>
</div>

<script>
    $(document).ready(function () {
        newPokemon();
        selectType();
        removeSelectedType();
        selectAbility();
        selectWeakness();
    });

    function newPokemon() {
        $('#btn-new-pokemon').on('click', function () {
            let pokemon = {};
        pokemon.POKEMON_NAME = $('#pokemon-name-input').val();
        pokemon.POKEMON_HEIGHT = $('#pokemon-heigth-input').val();
        pokemon.POKEMON_WEIGHT = $('#pokmeon-weigth-input').val();
        pokemon.POKEMON_CATEGORY = $('#pokemon-category-input').val();
        pokemon.POKEMON_IMG_URL = $('#pokemon-image-input').val();
        pokemon.POKEMON_PRICE = $('#pokemon-price-input').val();

        let pokemonStats = [];

       

        let pokemonTypes = [];
        let pokemonWeaknesses = [];
        let pokemonAbilities = [];

        $("#selected-abilities div").each(function (index, element) {

            let id = $(this).attr('data-abilityid')
            pokemonAbilities.push(id);
        });

        $("#selected-types div").each(function (index, element) {

            let id = $(this).attr('data-typeid')
            pokemonTypes.push(id);
        });

        $("#selected-weakness div").each(function (index, element) {

            let id = $(this).attr('data-weaknessid')
            pokemonWeaknesses.push(id);
        });

        $("#stat-inputs-container input").each(function (index, element) {

            let id = $(this).attr('data-statid')
            let value = $(this).val();

            let pokemonStat = {};
            pokemonStat.STAT_ID = "";
            pokemonStat.VALUE = "";
            pokemonStat.STAT_ID = id;
            pokemonStat.STAT_VALUE = value;
            pokemonStats.push(pokemonStat);
        });



        $.ajax({
            url: '@Url.Action("NewPokemon","NewPokemon")',
            type: "POST",
            dataType: "json",
            data: { pokemon: pokemon, typeIDs: pokemonTypes, weaknessIDs: pokemonWeaknesses,abilityIDs: pokemonAbilities ,pokemonStats:pokemonStats },
            success: function (data) {
                if (data == "başarılı") {
                    swal({
                        title: "Pokemon Eklendi !",
                        text: "Pokemon Başarıyla Oluşturuldu",
                        icon: "success",
                        button: "Tamam",
                    });
                }
                else {
                    swal({
                        title: "Pokemon Eklenemedi!",
                        text: "Hatalar: " + "\n" + data,
                        icon: "error",
                        button: "Tamam",
                    });
                }
                   
            }
        });
        })

    }

    function selectType() {
        $('#select-type-button').on('click', function () {

            let isTypeAdded = false;
            let typeID = "";
            let typeName = "";
            typeID = $('#type-select option:selected').attr('data-typeid');
            typeName = $('#type-select option:selected').val();

            $("#selected-types div").each(function (index,element) {

                if ($(this).attr('data-typeid') == typeID)
                {
                    isTypeAdded = true;
                }
            });


            if (isTypeAdded == false) {
                let $newDiv = $('<div class="mx-2 selected-type-container selected-type-container-click" data-typeid="' + typeID + '">' + typeName + '</div');

                $newDiv.text(typeName);
                $('#selected-types').append($newDiv);
            }
            else if(isTypeAdded == true){
                swal({
                    title: "Tip Eklenemedi!",
                    text: "Pokemon Tipi Zaten Eklenmiş",
                    icon: "error",
                    button: "Tamam",
                });
            }
        })
    }

    function selectWeakness() {
        $('#select-weakness-button').on('click', function () {

            let isWeaknessAdded = false;
            let weaknessID = "";
            let weaknessName = "";
            weaknessID = $('#weakness-select option:selected').attr('data-weaknessid');
            weaknessName = $('#weakness-select option:selected').val();

            $("#selected-weakness div").each(function (index, element) {

                if ($(this).attr('data-weaknessid') == weaknessID) {
                    isWeaknessAdded = true;
                }
            });


            if (isWeaknessAdded == false) {
                let $newDiv = $('<div class="mx-2 selected-type-container selected-type-container-click" data-weaknessid="' + weaknessID + '">' + weaknessName + '</div');

                $newDiv.text(weaknessName);
                $('#selected-weakness').append($newDiv);
            }
            else if (isWeaknessAdded == true) {
                swal({
                    title: "Tip Eklenemedi!",
                    text: "Pokemon Zayıflığı Zaten Eklenmiş",
                    icon: "error",
                    button: "Tamam",
                });
            }
        })
    }

    function selectAbility() {
        $('#select-ability-button').on('click', function () {

            let isAbilityAdded = false;
            let abilityID = "";
            let abilityName = "";
            abilityID = $('#ability-select option:selected').attr('data-abilityid');
            abilityName = $('#ability-select option:selected').val();

            $("#selected-abilities div").each(function (index, element) {

                if ($(this).attr('data-abilityid') == abilityID) {
                    isAbilityAdded = true;
                }
            });


            if (isAbilityAdded == false) {
                let $newDiv = $('<div class="mx-2 selected-type-container selected-type-container-click" data-abilityid="' + abilityID + '">' + abilityName + '</div');

                $newDiv.text(abilityName);
                $('#selected-abilities').append($newDiv);
            }
            else if (isAbilityAdded == true) {
                swal({
                    title: "Tip Eklenemedi!",
                    text: "Pokemon Tipi Zaten Eklenmiş",
                    icon: "error",
                    button: "Tamam",
                });
            }
        })
    }

    function removeSelectedType() {
        $('.selected-type-container-click').on('click', function () {
            alert("tıklandı !");

        })
    }
</script>
